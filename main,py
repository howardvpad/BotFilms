import json
import logging
import random
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã —Ñ–∏–ª—å–º–æ–≤
with open('movies_db.json', 'r', encoding='utf-8') as f:
    MOVIES_DB = json.load(f)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "üé¨ –ö–∏–Ω–æ-–±–æ—Ç v2.0\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å\n"
        "/list - –í—Å–µ —Ñ–∏–ª—å–º—ã\n"
        "/random - –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º\n\n"
        "–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞!"
    )

# –ö–æ–º–∞–Ω–¥–∞ /list
async def list_movies(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    movies_list = "\n".join([f"‚Ä¢ {m['title']} ({m['year']})" for m in MOVIES_DB])
    await update.message.reply_text(f"üìÇ –í—Å–µ —Ñ–∏–ª—å–º—ã:\n{movies_list}")

# –ö–æ–º–∞–Ω–¥–∞ /random
async def random_movie(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    movie = random.choice(MOVIES_DB)
    response = (
        f"üé≤ <b>–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º:</b>\n"
        f"üé¨ {movie['title']} ({movie['year']})\n"
        f"üìå –ñ–∞–Ω—Ä: {movie['genre']}\n"
        f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {movie['rating']}/10\n"
        f"üìñ –û–ø–∏—Å–∞–Ω–∏–µ: {movie['description']}"
    )
    await update.message.reply_text(response, parse_mode='HTML')

# –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞
async def search_movie(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.message.text.lower()
    found = [m for m in MOVIES_DB if query in m["title"].lower()]
    
    if not found:
        await update.message.reply_text("‚ùå –§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /list –∏–ª–∏ /random.")
        return
    
    movie = found[0]
    response = (
        f"üé¨ <b>{movie['title']}</b> ({movie['year']})\n"
        f"üìå –ñ–∞–Ω—Ä: {movie['genre']}\n"
        f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {movie['rating']}/10\n"
        f"üìñ –û–ø–∏—Å–∞–Ω–∏–µ: {movie['description']}"
    )
    await update.message.reply_text(response, parse_mode='HTML')

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main() -> None:
    application = Application.builder().token("MYToken").build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("list", list_movies))
    application.add_handler(CommandHandler("random", random_movie))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, search_movie))

    application.run_polling()

if __name__ == "__main__":
    main()
